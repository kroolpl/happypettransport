---
const contactOptions = [
  {
    name: 'WhatsApp',
    url: 'https://wa.me/44123456789',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"/>
          </svg>`,
    color: 'bg-[#25D366] hover:bg-[#20BD5C]'
  },
  {
    name: 'Messenger',
    url: 'https://m.me/100090279506562',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.627 0-12 4.975-12 11.111 0 3.497 1.745 6.616 4.472 8.652v4.237l4.086-2.242c1.09.301 2.246.464 3.442.464 6.627 0 12-4.974 12-11.111 0-6.136-5.373-11.111-12-11.111zm1.193 14.963l-3.056-3.259-5.963 3.259 6.559-6.963 3.13 3.259 5.889-3.259-6.559 6.963z"/>
          </svg>`,
    color: 'bg-[#0084FF] hover:bg-[#0072DB]'
  }
];
---

<div class="fixed bottom-20 right-4 z-[9999] block md:hidden">
  <!-- Main Button -->
  <button
    type="button"
    id="contactToggle"
    class="w-14 h-14 bg-accent rounded-full shadow-lg flex items-center justify-center text-white hover:bg-accent/90 transition-all duration-300"
    aria-label="Contact options"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
    </svg>
  </button>

  <!-- Contact Options -->
  <div 
    id="contactOptions" 
    class="absolute bottom-16 right-0 flex flex-col gap-3 scale-0 opacity-0 transition-all duration-300 origin-bottom-right"
  >
    {contactOptions.map((option) => (
      <a
        href={option.url}
        target="_blank"
        rel="noopener noreferrer"
        class={`w-12 h-12 ${option.color} rounded-full shadow-lg flex items-center justify-center text-white transform transition-all duration-300 hover:scale-110`}
        aria-label={`Contact through ${option.name}`}
      >
        <Fragment set:html={option.icon} />
      </a>
    ))}
  </div>
</div>

<script>
  function setupContactWidget() {
    const toggle = document.getElementById('contactToggle');
    const options = document.getElementById('contactOptions');
    let isOpen = false;

    if (!toggle || !options) return;

    const toggleMenu = () => {
      isOpen = !isOpen;
      
      if (isOpen) {
        options.classList.remove('scale-0', 'opacity-0');
        options.classList.add('scale-100', 'opacity-100');
      } else {
        options.classList.add('scale-0', 'opacity-0');
        options.classList.remove('scale-100', 'opacity-100');
      }
    };

    // Handle button click
    toggle.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleMenu();
    });

    // Close when clicking outside
    document.addEventListener('click', (e) => {
      if (isOpen && !options.contains(e.target as Node) && !toggle.contains(e.target as Node)) {
        toggleMenu();
      }
    });
  }

  // Setup on initial load
  setupContactWidget();

  // Re-setup after view transitions
  document.addEventListener('astro:after-swap', setupContactWidget);
</script>

<style>
  #contactToggle {
    -webkit-tap-highlight-color: transparent;
  }
</style> 